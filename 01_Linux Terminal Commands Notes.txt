
	unmae -o (shows which operating system you are running on)

1.linux terminal : 

   Opening  : ctrl + alt + t
   Closing  : ctrl + d
   clearing terminal : type clear and hit enter or cntr + l
        Showing calender : 
		i)  cal (shows calendar of current month)
		ii) cal -y (shows whole calendar of whole year)
		iii) cal 2017 (shows whole calendar of 2017)
	Showing Date : date
	history of commands : 
		i) history (shows all history of commands)
		ii) !2  (run the 2th command of command history)
		iii) !! (run the most recent command)
		iv ) history -c ; history -w (clear histories)
-c flag for clearing and -w flag for overriding
		v ) uparrow for traversing previous command

2.Differences among Terminal and Shell :

      commands : typing text in linux terminal
      Terminal : where we type commands,terminal send them to shell
      Shell  : interprest the text/command and perform action	

General commnad pattern: commandName -option input
location of command program : which commandName 

3. Each command structure : 


i)   commandName -optionShortForm input 
		or
     commandName --optionFullForm input

ex : programm version : gcc -v or gcc --version
     running command with input : cal -A 1  (print calendar after 1 month here -A is the option and 1 is input to it)

ii) option chaining : 

    using longForm : commandName --option1 --option2 --option3
    using shortForm : commandName -option1 -option2 -option3 
			or commandName -option1option2option3

4.Knowing details about a command : 
process : 01
	man -k which
	man which    (describe details about which command)
process : 02
	help commandName
	help ls

5. ls command : 

	ls (show all files and folders under the working directory)

	pwd (print working directory)

	ls -l (show details information about all files & folders)

	ls -l -h or ls -lh  or ls -l --human-readable 
	(show info in human readable format)

6. cat commnad : 

	i ) cat filename (prints file content in terminal)
		-cat > filename (write in file from terminal)
		-cat < filename (prints file content in terminal)
	ii) cat 1> output.txt or cat > output.txt 
	(remove contents of output.txt and rewrite terminals content in output.txt)
	iii) cat 1>> output.txt or cat >> output.txt 
(keep contents of output.txt and add terminals content with them)

	iv ) cat < input.txt > output.txt
(Read content from input.txt and paste them to output.txt)

	v) cat 0< input.txt 1> output.txt 
(parameters 0,1 denote which task to complete first)

7.piping: (command1 | command2)

	i) writing output to a file: date > output.txt

	ii) date | cut --delimiter=" " --fields=1
send output of date to the pipe --delimiter=" " seperate columns of output basend on space and --fields=1 returns first column

	iii) date | tee fulldate.txt | cut --delimiter=" " --field=1

send output of date to second pipe which saves content to fulldate.txt then send the same stream to the third pipe which sends its output to terminal

	iv)date | tee fulldate.txt | cut --delimiter=" " --field=1 > today.txt

this command redirect to terminal without priting stream

	v) cat today.txt | xargs echo
	   cat today.txt | xargs echo "Good Morning"
xargs receives stream of data  from previous pipe for that command which doesn't accept previous pip output as its input

8. ALiases : (giving nickname of long commands or any command)

		i) firstly create a file named '.bash_aliases' at your home directory
		ii) inside that file save the line 
	alias showDay="date | cut -d' ' -f'1'"
		or
	alias showDay2="date |cut --delimiter=' ' --fields='1'"

		ii) now reopen your terminal and type showDay hit enter then it will show the day name

9.Linux File System: 

	i) pwd  (print working directory)
	ii) ls -l (show folders in long list format)
	    ls -h (show folders in human-readable format)
	    ls -lh (show folders in long listing format and human 
readable format)
	    ls -a (show all files including hidden files)
	    ls *  (show all folders and files under them)
	    ls D*  (show folders that starts with D)
Regular expression is allowed here
	iii) cd Documents (go inside Documents) 
	    cd ..    (come out from current folder)
	    cd ~  (come to home or root directory)
	iv) file filename  (shows some neccessary info about file)
	v)  touch dates.txt  (creates a file named dates.txt)
	vi) mkdir folder_name (creates a folder )
	vii) mkdir {A,B}_{1,2}  (creates A_1,A_2,B_1,B_2 folders)
	   mkdir -p delme/file{1..5} (creates folders in path -p)
	viii) touch {file}_{1,2}.txt (creates A_1,A_2,B_1,B_2 files)
	ix )  ls  {A,B}_{1..2} (show folders of A_1,A_2,B_1,B_2)
	x ) rmdir (removes only empty directory)
	xi) rm -r delme (remove recursively everything inside delme)
	xii) rm -ri delme (remove recursively and interactively which means before deleting it will ask for permission)
	xiii) cp file1.txt file2.txt (copy contents of file1.txt to file2.txt)
	xiv) cp file1 file2 copied/ (copy file1 file2 and paste them inside the folder copied)
	xv) cp -r folder1 folder2 (copy recursively everything inside folder1 and paste them inside the folder2)

	xvi) renaming files : mv file1.txt myFile.txt (rename file1.txt with myFile.txt)
	     renaming folders: mv newFolder myFolder (rename newFolder with myFolder)

	xvii) moving items : mv myFolder/* myAnotherFolder/ (move everything inside myFolder to myAnotherFolder)

running command as administrator or with permission : sudo command

10. Nano Editor :  nano filename (this will open the file in terminal editor nano where you can type save replace etc. There is a clear overview below nano editor which may help you to understand how to execute these commands)

11. Locate command :

	i) locate *.conf  (show all files path ended with .conf)
	ii) locate -i *.CoNf (search case insentively)
	iii) locate -i --existing *.conf (show only existing items)
	iv) locate -i --existing *.conf --limit=3 (show only first three items)
	in shorthand : locate -i -e *.conf -l '3'

	v)updating database for finding any file inside any foder:
		sudo updatedb
	vi) after that: locate file1.txt (shows the path where it is)
	vii) To see database of locate : locate -S

12. Find Command : 
	
	i) find or find .(shows all folder and files in depth)
	ii) find . -maxdepth 1 (show in 1 depth files and folders)
	iii) find . -type f  (show files only)
	iv) find . -type d   (show folders only)
	v)  find . -name "file1.txt" (finds out the path of file1.txt)
	vi) find . -iname "file.TxT" (finds case insensitively)
	vii) find . -size +4k -size -1G (find in depth inside this folder which files greater then 4k but less than 1G)
	
13. viewing files : 

    i) tac file1.txt (read files content from endline to startline)
    ii) rev file1.txt (read reversely every line of a file)
    iii) find | less (at first shows 20 results then if down arrow is pressed then another result is shown , if up arrow is presses then recent result is erated)
    iv) cat myFile.txt | head -n 2 (show first 2 lines of file)
     v) cat myFile.txt | tail -n 2 (show last 2 lines)

14. Sorting: 

	i) sort myFile.txt (sort file contents alphabetically)
	ii) sort -n  myFile.txt (sort file contents numerically)
	iii) sort -nr  myFile.txt or sort  -n -r  myFile.txt (sort the items of the file numerically and reversely)
	iv) sort -n -u myFile.txt (-u flag means keep unique numbers)

15. Searching : 

	i) grep h myFile.txt (show the lines containing letter 'h')
	ii) grep h -c myFile.txt (show number of lines that has 'h')
	iii) grep h -i myFile.txt (-i flag means search case insensitively)
	iv) grep -v 'm' -i myFile.txt (show the lines that dont have letter 'm' )
	v)grep '^how' myFile.txt (grep also excepts regex)

16. File archiving and compression: 

	i) touch file{1..3}.txt (create 3 files)
	ii) tar -cvf myArchive.tar file[1-3].txt (creating tar file)
	iii) tar -tf myArchive.tar (show files inside tar)
	iv ) tar -xvf myArchive.tar (extracting files from tar)
	v) zip 2016331076.zip file[1-3].txt (creating zip file)
	vi) unzip 2016331076.zip  (extracting files)

17.Bash scripting : 

	i) which bash (shows path of location of bash compiler)
	ii) #!/bin/bash (tells the bash script where is compiler)
	iii) write your script like: 

	# is Shar and ! is Bang, combinely #! is SheBang

	#!/bin/bash
	mkdir demoFiles
	cd demoFiles
	touch file{1..100}.txt

after that hit and save it .

	iv) bash filename.sh (runs your program and create a directory called demoFiles and 100 texts files inside it)

18. Updating and Upgrading: 

	i) sudo apt-get update
	ii) sudo apt-get upgrade

19. searching package and installing and Uninstalling: 

	i) apt-cache search sqlmap (shows little info about a package)
	ii) apt-cache show sqlmap (shows detail info about a package)
	iii) sudo apt-get install package_name
	iv) sudo apt-get source package_name (download source code)
	v) sudo apt-get purge package_name (remove package with all of its dependency files and configuration files)
	vi) sudo apt-get auto-remove (remove all unwanted dependency)
	vii)sudo apt-get clean (deletes all compressed archives)


